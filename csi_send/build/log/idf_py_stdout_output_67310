[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_send/build/bootloader/esp-idf/esptool_py && /Users/sureel/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/sureel/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_send/build/bootloader/bootloader.bin
Bootloader binary size 0x5200 bytes. 0x2e00 bytes (36%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/app_main.c.obj
/Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_send/main/app_main.c: In function 'app_main':
/Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_send/main/app_main.c:154:54: warning: passing argument 2 of 'esp_now_send' from incompatible pointer type [-Wincompatible-pointer-types]
  154 |         esp_err_t ret = esp_now_send(peer.peer_addr, &count, sizeof(uint32_t));
      |                                                      ^~~~~~
      |                                                      |
      |                                                      uint32_t * {aka long unsigned int *}
In file included from /Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_send/main/app_main.c:21:
/Users/sureel/esp/esp-idf/components/esp_wifi/include/esp_now.h:209:65: note: expected 'const uint8_t *' {aka 'const unsigned char *'} but argument is of type 'uint32_t *' {aka 'long unsigned int *'}
  209 | esp_err_t esp_now_send(const uint8_t *peer_addr, const uint8_t *data, size_t len);
      |                                                  ~~~~~~~~~~~~~~~^~~~
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable csi_send.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_send/build/csi_send.bin
[7/8] cd /Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_send/build/esp-idf/esptool_py && /Users/sureel/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/sureel/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_send/build/partition_table/partition-table.bin /Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_send/build/csi_send.bin
csi_send.bin binary size 0xb0580 bytes. Smallest app partition is 0x100000 bytes. 0x4fa80 bytes (31%) free.
[7/8] cd /Users/sureel/esp/esp-idf/components/esptool_py && /opt/homebrew/Cellar/cmake/3.23.2/bin/cmake -D IDF_PATH=/Users/sureel/esp/esp-idf -D "SERIAL_TOOL=/Users/sureel/.espressif/python_env/idf5.1_py3.10_env/bin/python;;/Users/sureel/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_send/build -P /Users/sureel/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/cu.usbmodem13101 -b 115200 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 csi_send.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev1
Serial port /dev/cu.usbmodem13101

A fatal error occurred: Could not open /dev/cu.usbmodem13101, the port doesn't exist
FAILED: CMakeFiles/flash /Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_send/build/CMakeFiles/flash 
cd /Users/sureel/esp/esp-idf/components/esptool_py && /opt/homebrew/Cellar/cmake/3.23.2/bin/cmake -D IDF_PATH=/Users/sureel/esp/esp-idf -D "SERIAL_TOOL=/Users/sureel/.espressif/python_env/idf5.1_py3.10_env/bin/python;;/Users/sureel/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_send/build -P /Users/sureel/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
ninja: build stopped: subcommand failed.
