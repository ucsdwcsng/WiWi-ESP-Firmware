[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_recv/build/bootloader/esp-idf/esptool_py && /Users/sureel/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/sureel/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_recv/build/bootloader/bootloader.bin
Bootloader binary size 0x5210 bytes. 0x2df0 bytes (36%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/app_main.c.obj
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable csi_recv.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_recv/build/csi_recv.bin
[7/8] cd /Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_recv/build/esp-idf/esptool_py && /Users/sureel/.espressif/python_env/idf5.1_py3.10_env/bin/python /Users/sureel/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_recv/build/partition_table/partition-table.bin /Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_recv/build/csi_recv.bin
csi_recv.bin binary size 0xaff10 bytes. Smallest app partition is 0x100000 bytes. 0x500f0 bytes (31%) free.
[7/8] cd /Users/sureel/esp/esp-idf/components/esptool_py && /opt/homebrew/Cellar/cmake/3.23.2/bin/cmake -D IDF_PATH=/Users/sureel/esp/esp-idf -D "SERIAL_TOOL=/Users/sureel/.espressif/python_env/idf5.1_py3.10_env/bin/python;;/Users/sureel/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/sureel/VS_Code/WiWi-ESP-Firmware/csi_recv/build -P /Users/sureel/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/cu.usbmodem12101 -b 115200 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 csi_recv.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev1
Serial port /dev/cu.usbmodem12101
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE
Crystal is 40MHz
MAC: 48:27:e2:69:70:ac
Uploading stub...
Running stub...
Stub running...
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x000bffff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 21008 bytes to 13333...
Writing at 0x00000000... (100 %)
Wrote 21008 bytes (13333 compressed) at 0x00000000 in 0.4 seconds (effective 393.7 kbit/s)...
Hash of data verified.
Compressed 720656 bytes to 459249...
Writing at 0x00010000... (3 %)
Writing at 0x0001b7cb... (6 %)
Writing at 0x00024ee4... (10 %)
Writing at 0x0002a202... (13 %)
Writing at 0x00032487... (17 %)
Writing at 0x000386fb... (20 %)
Writing at 0x0003ead2... (24 %)
Writing at 0x00044607... (27 %)
Writing at 0x00049f48... (31 %)
Writing at 0x0004ee3d... (34 %)
Writing at 0x00053f32... (37 %)
Writing at 0x00058f9f... (41 %)
Writing at 0x0005e257... (44 %)
Writing at 0x000636bf... (48 %)
Writing at 0x000691d8... (51 %)
Writing at 0x0006e9da... (55 %)
Writing at 0x000740e7... (58 %)
Writing at 0x0007984a... (62 %)
Writing at 0x0007f034... (65 %)
Writing at 0x00084ac8... (68 %)
Writing at 0x0008a407... (72 %)
Writing at 0x0008ff3c... (75 %)
Writing at 0x00095780... (79 %)
Writing at 0x0009e35b... (82 %)
Writing at 0x000a63d5... (86 %)
Writing at 0x000ae78c... (89 %)
Writing at 0x000b424d... (93 %)
Writing at 0x000ba13b... (96 %)
Writing at 0x000bfca3... (100 %)
Wrote 720656 bytes (459249 compressed) at 0x00010000 in 6.3 seconds (effective 913.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 366.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
